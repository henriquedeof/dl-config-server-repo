server:
    port: 8086
    servlet:
        context-path: '/dl-payment/'

spring:
    application:
        name: dl-payment-service
    datasource:
        url:  jdbc:postgresql://localhost:5432/dl-payment
        username: postgres
        password: root
    jpa:
        hibernate:
            ddl-auto: update
            dialect: org.hibernate.dialect.PostgreSQLDialect
            jdbc:
                lob.non-contextual-creation: true
        properties:
            hibernate:
                show_sql: true
    output:
        ansi:
            enabled: Always
    rabbitmq:
        addresses: amqps://dsvvfanu:4FhHf07AACm8Gv1-SoWH337wGN6zGi1P@possum.lmq.cloudamqp.com/dsvvfanu

logging:
    level:
        com.xpto: TRACE
        root: INFO
        org.springframework.web: DEBUG
        org.hibernate: INFO

dl:
    broker:
        exchange:
            # It should be dl.userevent (with a dot not dash)
            userEventExchange: dl-userevent
            paymentCommandExchange: dl.paymentcommand
            paymentEventExchange: dl.paymentevent
        queue:
            userEventQueue:
                name: dl.userevent.ms.payment
            paymentCommandQueue:
                name: dl.paymentcommand.ms.payment
        key:
            paymentCommandKey: ms.payment
    stripe:
        # secretKey: '{cipher}SOME_RANDOM_STRING' # This way I encrypt the 'SOME_RANDOM_STRING' secretKey, so that I do not expose it when it goes to github.
        # It was genrated through http://localhost:8888/encrypt, which is part of the config-server project.
        secretKey: '{cipher}43ec74694c251c37e81ce5d97ab5f5330c534c824fc2178721712e2d65e01c73b826a90de286f36265f664a1ab726ab32e4db090831afcdc9b9bc814326148abbf7ce8380601bd93a2fac9dafbabd3e09ef457b6e676f199872ac6c5b05c0b97298e22b319fac3b9f013a36e2f1ab837f848580192e074505956b8d9eb3b585b'


management:
    endpoints:
        web:
            exposure:
                include:
                    - refresh
                    - health
